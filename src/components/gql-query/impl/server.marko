import fetchImpl from "make-fetch-happen";
import { createClient } from "../../../client";
$ {
  let store =
    out.global.$$GQL ||
    (out.global.$$GQL = createClient({
      isServer: true,
      fetch(url, options) {
        const incomingMessage = out.stream && (out.stream.req || out.stream.request) || out.global.req || out.global.request;
        if (!incomingMessage) return fetchImpl(url, options);

        return fetchImpl(url, {
          ...options,
          headers: {
            ...incomingMessage.headers,
            ...options.headers,
          }
        });
      }
    }));
  const request = store.client.query(input.query, input.variables).toPromise();
}

<await(request) client-reorder placeholder=input.placeholder>
  <@then|result|>
    <component-def/>
    <div no-update>
      <if(componentDef._wrr)>
        <gql-query-client
          data=result.data
          op-key=result.operation.key
          then=input.then
          key="gqlc"
        />
      </if>
      <else><${input.then.renderBody} data=result.data/></else>
    </div>
  </@then>
</await>

