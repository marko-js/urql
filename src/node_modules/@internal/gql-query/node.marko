import { getClient } from "@internal/client";
static function errorToJSON() {
  return {
    _: 1,
    name: this.name,
    message: this.message
  }
}

<component-def/>
<div key="root" no-update>
  <await(getClient(out, input.name).query(input.query, input.variables).toPromise())
    client-reorder
    timeout=input.timeout
    placeholder=input.placeholder
  >
    <@then|{ data, error, operation }|>
      <if(componentDef._wrr)>
        <gql-query-client
          key="gqlc"
          name=input.name
          data=data
          error=error
          opKey=operation.key
          then=input.then
          query=input.query
          variables=input.variables
          requestPolicy=input.requestPolicy
        />
      </if>
      <else><${input.then}({ data, error, fetching: false })/></else>
    </@then>
    <@catch|error|>
      <if(componentDef._wrr)>
        $ error.toJSON = errorToJSON;
        <gql-query-client
          key="gqlc"
          name=input.name
          error=error
          opKey=1
          then=input.then
          query=input.query
          variables=input.variables
          requestPolicy=input.requestPolicy
        />
      </if>
      <else><${input.then}({ data: undefined, error, fetching: false })/></else>
    </@catch>
  </await>
</div>
